import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';
import { Badge } from './ui/badge';
import { Button } from './ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';
import { Progress } from './ui/progress';
import { 
  BookOpen, 
  Clock, 
  Users, 
  Award, 
  TrendingUp,
  Code,
  Database,
  Shield,
  Brain,
  Smartphone,
  Globe,
  ChevronRight,
  Star,
  Download,
  Calendar,
  MapPin
} from 'lucide-react';
import { ImageWithFallback } from './ui/ImageWithFallback';

export function ProgramsPage() {
  const [selectedProgram, setSelectedProgram] = useState('software-engineering');

  const programs = [
    {
      id: 'software-engineering',
      name: 'K·ªπ thu·∫≠t Ph·∫ßn m·ªÅm',
      level: 'C·ª≠ nh√¢n',
      duration: '4 nƒÉm',
      credits: 140,
      description: 'Ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o k·ªπ s∆∞ ph·∫ßn m·ªÅm chuy√™n nghi·ªáp v·ªõi ki·∫øn th·ª©c s√¢u v·ªÅ thi·∫øt k·∫ø, ph√°t tri·ªÉn v√† qu·∫£n l√Ω d·ª± √°n ph·∫ßn m·ªÅm.',
      icon: Code,
      color: 'blue',
      featured: true,
      objectives: [
        'Thi·∫øt k·∫ø v√† ph√°t tri·ªÉn c√°c ·ª©ng d·ª•ng ph·∫ßn m·ªÅm ph·ª©c t·∫°p',
        'Qu·∫£n l√Ω d·ª± √°n ph·∫ßn m·ªÅm theo c√°c ph∆∞∆°ng ph√°p Agile/Scrum',
        '√Åp d·ª•ng c√°c m·∫´u thi·∫øt k·∫ø v√† ki·∫øn tr√∫c ph·∫ßn m·ªÅm',
        'ƒê·∫£m b·∫£o ch·∫•t l∆∞·ª£ng v√† b·∫£o m·∫≠t trong ph√°t tri·ªÉn ph·∫ßn m·ªÅm'
      ],
      subjects: [
        { name: 'C·∫•u tr√∫c D·ªØ li·ªáu & Gi·∫£i thu·∫≠t', credits: 4, semester: 2 },
        { name: 'L·∫≠p tr√¨nh H∆∞·ªõng ƒë·ªëi t∆∞·ª£ng', credits: 4, semester: 3 },
        { name: 'C∆° s·ªü D·ªØ li·ªáu', credits: 4, semester: 4 },
        { name: 'K·ªπ thu·∫≠t Ph·∫ßn m·ªÅm', credits: 4, semester: 5 },
        { name: 'Ph√°t tri·ªÉn Web', credits: 4, semester: 6 },
        { name: 'Mobile Development', credits: 4, semester: 7 }
      ],
      technologies: ['Java', 'Python', 'JavaScript', 'React', 'Node.js', 'SQL', 'Git', 'Docker'],
      careerPaths: [
        'Software Developer',
        'Full-stack Developer', 
        'Technical Lead',
        'Solution Architect',
        'Product Manager'
      ],
      salary: '15-30 tri·ªáu VND',
      employmentRate: 95
    },
    {
      id: 'data-science',
      name: 'Khoa h·ªçc D·ªØ li·ªáu',
      level: 'C·ª≠ nh√¢n',
      duration: '4 nƒÉm',
      credits: 140,
      description: 'Ch∆∞∆°ng tr√¨nh ti√™n phong v·ªÅ ph√¢n t√≠ch d·ªØ li·ªáu, machine learning v√† tr√≠ tu·ªá nh√¢n t·∫°o.',
      icon: Database,
      color: 'green',
      featured: true,
      objectives: [
        'Thu th·∫≠p, x·ª≠ l√Ω v√† ph√¢n t√≠ch d·ªØ li·ªáu l·ªõn',
        'X√¢y d·ª±ng m√¥ h√¨nh Machine Learning v√† AI',
        'Tr·ª±c quan h√≥a d·ªØ li·ªáu v√† b√°o c√°o th√¥ng minh',
        'ƒê∆∞a ra quy·∫øt ƒë·ªãnh kinh doanh d·ª±a tr√™n d·ªØ li·ªáu'
      ],
      subjects: [
        { name: 'Th·ªëng k√™ & X√°c su·∫•t', credits: 4, semester: 2 },
        { name: 'Python for Data Science', credits: 4, semester: 3 },
        { name: 'Machine Learning', credits: 4, semester: 4 },
        { name: 'Big Data Analytics', credits: 4, semester: 5 },
        { name: 'Deep Learning', credits: 4, semester: 6 },
        { name: 'Data Visualization', credits: 4, semester: 7 }
      ],
      technologies: ['Python', 'R', 'SQL', 'Pandas', 'TensorFlow', 'PyTorch', 'Tableau', 'Spark'],
      careerPaths: [
        'Data Scientist',
        'Data Analyst',
        'ML Engineer',
        'Business Intelligence Analyst',
        'Research Scientist'
      ],
      salary: '20-40 tri·ªáu VND',
      employmentRate: 92
    },
    {
      id: 'cybersecurity',
      name: 'An to√†n Th√¥ng tin',
      level: 'C·ª≠ nh√¢n',
      duration: '4 nƒÉm',
      credits: 140,
      description: 'ƒê√†o t·∫°o chuy√™n gia b·∫£o m·∫≠t m·∫°ng v√† an to√†n th√¥ng tin v·ªõi ki·∫øn th·ª©c to√†n di·ªán.',
      icon: Shield,
      color: 'red',
      featured: false,
      objectives: [
        'Ph√¢n t√≠ch v√† ƒë√°nh gi√° r·ªßi ro b·∫£o m·∫≠t',
        'Thi·∫øt k·∫ø h·ªá th·ªëng b·∫£o m·∫≠t to√†n di·ªán',
        '·ª®ng ph√≥ v·ªõi c√°c cu·ªôc t·∫•n c√¥ng m·∫°ng',
        'Qu·∫£n l√Ω ch√≠nh s√°ch b·∫£o m·∫≠t doanh nghi·ªáp'
      ],
      subjects: [
        { name: 'M·∫°ng M√°y t√≠nh', credits: 4, semester: 2 },
        { name: 'Cryptography', credits: 4, semester: 3 },
        { name: 'Network Security', credits: 4, semester: 4 },
        { name: 'Ethical Hacking', credits: 4, semester: 5 },
        { name: 'Digital Forensics', credits: 4, semester: 6 },
        { name: 'Security Management', credits: 4, semester: 7 }
      ],
      technologies: ['Linux', 'Wireshark', 'Metasploit', 'Burp Suite', 'OpenSSL', 'Firewall', 'IDS/IPS'],
      careerPaths: [
        'Security Analyst',
        'Penetration Tester',
        'Security Architect',
        'Incident Response Specialist',
        'Chief Security Officer'
      ],
      salary: '18-35 tri·ªáu VND',
      employmentRate: 90
    },
    {
      id: 'artificial-intelligence',
      name: 'Tr√≠ tu·ªá Nh√¢n t·∫°o',
      level: 'C·ª≠ nh√¢n',
      duration: '4 nƒÉm',
      credits: 140,
      description: 'Ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o v·ªÅ AI, machine learning v√† c√°c c√¥ng ngh·ªá th√¥ng minh.',
      icon: Brain,
      color: 'purple',
      featured: true,
      objectives: [
        'Ph√°t tri·ªÉn c√°c h·ªá th·ªëng AI th√¥ng minh',
        'Nghi√™n c·ª©u v√† ·ª©ng d·ª•ng Machine Learning',
        'X√¢y d·ª±ng chatbot v√† virtual assistant',
        '·ª®ng d·ª•ng AI trong c√°c lƒ©nh v·ª±c th·ª±c t·∫ø'
      ],
      subjects: [
        { name: 'Logic To√°n h·ªçc', credits: 4, semester: 2 },
        { name: 'Artificial Intelligence', credits: 4, semester: 3 },
        { name: 'Machine Learning', credits: 4, semester: 4 },
        { name: 'Natural Language Processing', credits: 4, semester: 5 },
        { name: 'Computer Vision', credits: 4, semester: 6 },
        { name: 'Robotics', credits: 4, semester: 7 }
      ],
      technologies: ['Python', 'TensorFlow', 'PyTorch', 'OpenCV', 'NLTK', 'Keras', 'ROS', 'CUDA'],
      careerPaths: [
        'AI Engineer',
        'Machine Learning Engineer',
        'Research Scientist',
        'AI Product Manager',
        'Computer Vision Engineer'
      ],
      salary: '25-50 tri·ªáu VND',
      employmentRate: 88
    }
  ];

  const masterPrograms = [
    {
      name: 'Th·∫°c sƒ© Khoa h·ªçc M√°y t√≠nh',
      duration: '2 nƒÉm',
      description: 'Ch∆∞∆°ng tr√¨nh th·∫°c sƒ© nghi√™n c·ª©u n√¢ng cao v·ªÅ khoa h·ªçc m√°y t√≠nh'
    },
    {
      name: 'Th·∫°c sƒ© An to√†n Th√¥ng tin',
      duration: '2 nƒÉm', 
      description: 'Chuy√™n s√¢u v·ªÅ b·∫£o m·∫≠t v√† an to√†n th√¥ng tin doanh nghi·ªáp'
    }
  ];

  const currentProgram = programs.find(p => p.id === selectedProgram) || programs[0];

  return (
    <div className="min-h-screen bg-white">
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-blue-900 to-indigo-900 text-white py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center">
            <Badge className="mb-4 bg-yellow-500 text-black hover:bg-yellow-400">
              üéì Ch∆∞∆°ng tr√¨nh ƒê√†o t·∫°o 2025
            </Badge>
            <h1 className="text-4xl md:text-6xl font-bold mb-6">
              Ch∆∞∆°ng tr√¨nh ƒê√†o t·∫°o
            </h1>
            <p className="text-xl md:text-2xl mb-8 max-w-4xl mx-auto">
              C√°c ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o hi·ªán ƒë·∫°i, c·∫≠p nh·∫≠t theo xu h∆∞·ªõng c√¥ng ngh·ªá m·ªõi nh·∫•t,
              ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ sinh vi√™n c√≥ th·ªÉ l√†m vi·ªác ngay sau khi t·ªët nghi·ªáp.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" className="bg-white text-blue-900 hover:bg-gray-100">
                <Download className="mr-2 h-4 w-4" />
                T·∫£i brochure
              </Button>
              <Button size="lg" variant="outline" className="border-white text-white hover:bg-white hover:text-blue-900">
                <Calendar className="mr-2 h-4 w-4" />
                ƒêƒÉng k√Ω t∆∞ v·∫•n
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Programs Overview */}
      <section className="py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              Ch∆∞∆°ng tr√¨nh C·ª≠ nh√¢n
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              4 chuy√™n ng√†nh ch√≠nh v·ªõi n·ªôi dung ƒë√†o t·∫°o to√†n di·ªán v√† c∆° h·ªôi vi·ªác l√†m cao
            </p>
          </div>

          <div className="grid lg:grid-cols-4 gap-8 mb-12">
            {programs.map((program) => {
              const Icon = program.icon;
              const isSelected = program.id === selectedProgram;
              return (
                <Card 
                  key={program.id} 
                  className={`cursor-pointer transition-all duration-300 hover:shadow-xl ${
                    isSelected ? 'ring-2 ring-blue-500 shadow-lg' : ''
                  } ${program.featured ? 'border-yellow-300' : ''}`}
                  onClick={() => setSelectedProgram(program.id)}
                >
                  <CardHeader>
                    {program.featured && (
                      <Badge className="mb-2 bg-yellow-500 text-black w-fit">
                        <Star className="h-3 w-3 mr-1" />
                        N·ªïi b·∫≠t
                      </Badge>
                    )}
                    <div className={`w-12 h-12 bg-${program.color}-100 rounded-lg flex items-center justify-center mb-4`}>
                      <Icon className={`h-6 w-6 text-${program.color}-600`} />
                    </div>
                    <CardTitle className="text-lg">{program.name}</CardTitle>
                    <CardDescription>{program.description}</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-gray-600">Th·ªùi gian:</span>
                        <span>{program.duration}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">T√≠n ch·ªâ:</span>
                        <span>{program.credits}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">T·ª∑ l·ªá c√≥ vi·ªác:</span>
                        <span className="text-green-600 font-medium">{program.employmentRate}%</span>
                      </div>
                    </div>
                    <Button 
                      variant={isSelected ? 'default' : 'outline'} 
                      className="w-full mt-4"
                      onClick={() => setSelectedProgram(program.id)}
                    >
                      {isSelected ? 'ƒêang xem' : 'Xem chi ti·∫øt'}
                      <ChevronRight className="ml-2 h-4 w-4" />
                    </Button>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        </div>
      </section>

      {/* Program Details */}
      <section className="py-20 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid lg:grid-cols-3 gap-8">
            {/* Main Content */}
            <div className="lg:col-span-2 space-y-8">
              <Card>
                <CardHeader>
                  <div className="flex items-center justify-between">
                    <div>
                      <CardTitle className="text-2xl">{currentProgram.name}</CardTitle>
                      <CardDescription className="text-lg mt-2">
                        {currentProgram.description}
                      </CardDescription>
                    </div>
                    <div className={`w-16 h-16 bg-${currentProgram.color}-100 rounded-xl flex items-center justify-center`}>
                      <currentProgram.icon className={`h-8 w-8 text-${currentProgram.color}-600`} />
                    </div>
                  </div>
                </CardHeader>
                <CardContent>
                  <Tabs defaultValue="overview" className="w-full">
                    <TabsList className="grid w-full grid-cols-4">
                      <TabsTrigger value="overview">T·ªïng quan</TabsTrigger>
                      <TabsTrigger value="curriculum">Ch∆∞∆°ng tr√¨nh</TabsTrigger>
                      <TabsTrigger value="technology">C√¥ng ngh·ªá</TabsTrigger>
                      <TabsTrigger value="career">Ngh·ªÅ nghi·ªáp</TabsTrigger>
                    </TabsList>

                    <TabsContent value="overview" className="space-y-6">
                      <div>
                        <h3 className="text-lg font-semibold mb-4">M·ª•c ti√™u ƒë√†o t·∫°o</h3>
                        <ul className="space-y-2">
                          {currentProgram.objectives.map((objective, index) => (
                            <li key={index} className="flex items-start space-x-2">
                              <div className="w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0"></div>
                              <span>{objective}</span>
                            </li>
                          ))}
                        </ul>
                      </div>

                      <div className="grid md:grid-cols-3 gap-6">
                        <Card>
                          <CardContent className="pt-6 text-center">
                            <Clock className="h-8 w-8 text-blue-600 mx-auto mb-2" />
                            <div className="font-semibold">{currentProgram.duration}</div>
                            <div className="text-sm text-gray-600">Th·ªùi gian ƒë√†o t·∫°o</div>
                          </CardContent>
                        </Card>
                        <Card>
                          <CardContent className="pt-6 text-center">
                            <BookOpen className="h-8 w-8 text-green-600 mx-auto mb-2" />
                            <div className="font-semibold">{currentProgram.credits} t√≠n ch·ªâ</div>
                            <div className="text-sm text-gray-600">T·ªïng s·ªë t√≠n ch·ªâ</div>
                          </CardContent>
                        </Card>
                        <Card>
                          <CardContent className="pt-6 text-center">
                            <TrendingUp className="h-8 w-8 text-purple-600 mx-auto mb-2" />
                            <div className="font-semibold">{currentProgram.employmentRate}%</div>
                            <div className="text-sm text-gray-600">T·ª∑ l·ªá c√≥ vi·ªác l√†m</div>
                          </CardContent>
                        </Card>
                      </div>
                    </TabsContent>

                    <TabsContent value="curriculum" className="space-y-6">
                      <div>
                        <h3 className="text-lg font-semibold mb-4">C√°c m√¥n h·ªçc ch√≠nh</h3>
                        <div className="space-y-4">
                          {currentProgram.subjects.map((subject, index) => (
                            <Card key={index}>
                              <CardContent className="pt-4">
                                <div className="flex justify-between items-center">
                                  <div>
                                    <div className="font-medium">{subject.name}</div>
                                    <div className="text-sm text-gray-600">H·ªçc k·ª≥ {subject.semester}</div>
                                  </div>
                                  <Badge variant="outline">{subject.credits} TC</Badge>
                                </div>
                              </CardContent>
                            </Card>
                          ))}
                        </div>
                      </div>
                    </TabsContent>

                    <TabsContent value="technology" className="space-y-6">
                      <div>
                        <h3 className="text-lg font-semibold mb-4">C√¥ng ngh·ªá s·ª≠ d·ª•ng</h3>
                        <div className="grid grid-cols-3 gap-3">
                          {currentProgram.technologies.map((tech, index) => (
                            <Badge key={index} variant="secondary" className="justify-center py-2">
                              {tech}
                            </Badge>
                          ))}
                        </div>
                      </div>
                      
                      <div>
                        <h3 className="text-lg font-semibold mb-4">D·ª± √°n th·ª±c t·∫ø</h3>
                        <div className="space-y-4">
                          <Card>
                            <CardContent className="pt-4">
                              <h4 className="font-medium mb-2">D·ª± √°n Capstone</h4>
                              <p className="text-sm text-gray-600">
                                Sinh vi√™n s·∫Ω th·ª±c hi·ªán m·ªôt d·ª± √°n l·ªõn trong h·ªçc k·ª≥ cu·ªëi, 
                                l√†m vi·ªác v·ªõi doanh nghi·ªáp th·ª±c t·∫ø ƒë·ªÉ gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ c·ª• th·ªÉ.
                              </p>
                            </CardContent>
                          </Card>
                        </div>
                      </div>
                    </TabsContent>

                    <TabsContent value="career" className="space-y-6">
                      <div>
                        <h3 className="text-lg font-semibold mb-4">C∆° h·ªôi ngh·ªÅ nghi·ªáp</h3>
                        <div className="grid md:grid-cols-2 gap-4">
                          {currentProgram.careerPaths.map((career, index) => (
                            <Card key={index}>
                              <CardContent className="pt-4">
                                <div className="flex items-center space-x-3">
                                  <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                                  <span className="font-medium">{career}</span>
                                </div>
                              </CardContent>
                            </Card>
                          ))}
                        </div>
                      </div>

                      <Card>
                        <CardContent className="pt-6">
                          <div className="flex justify-between items-center mb-4">
                            <h4 className="font-semibold">M·ª©c l∆∞∆°ng kh·ªüi ƒëi·ªÉm</h4>
                            <span className="text-xl font-bold text-green-600">{currentProgram.salary}</span>
                          </div>
                          <Progress value={currentProgram.employmentRate} className="mb-2" />
                          <div className="text-sm text-gray-600">
                            {currentProgram.employmentRate}% sinh vi√™n c√≥ vi·ªác l√†m trong v√≤ng 6 th√°ng sau t·ªët nghi·ªáp
                          </div>
                        </CardContent>
                      </Card>
                    </TabsContent>
                  </Tabs>
                </CardContent>
              </Card>
            </div>

            {/* Sidebar */}
            <div className="space-y-6">
              {/* Quick Info */}
              <Card>
                <CardHeader>
                  <CardTitle>Th√¥ng tin nhanh</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="flex justify-between">
                    <span className="text-gray-600">B·∫±ng c·∫•p:</span>
                    <span>{currentProgram.level}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">Th·ªùi gian:</span>
                    <span>{currentProgram.duration}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">T√≠n ch·ªâ:</span>
                    <span>{currentProgram.credits}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">M·ª©c l∆∞∆°ng:</span>
                    <span className="text-green-600">{currentProgram.salary}</span>
                  </div>
                </CardContent>
              </Card>

              {/* Master Programs */}
              <Card>
                <CardHeader>
                  <CardTitle>Ch∆∞∆°ng tr√¨nh Th·∫°c sƒ©</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {masterPrograms.map((program, index) => (
                    <div key={index} className="border rounded-lg p-4">
                      <h4 className="font-medium mb-1">{program.name}</h4>
                      <p className="text-sm text-gray-600 mb-2">{program.description}</p>
                      <div className="flex items-center text-sm text-gray-500">
                        <Clock className="h-4 w-4 mr-1" />
                        {program.duration}
                      </div>
                    </div>
                  ))}
                </CardContent>
              </Card>

              {/* Contact */}
              <Card>
                <CardHeader>
                  <CardTitle>Li√™n h·ªá t∆∞ v·∫•n</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="flex items-center space-x-3">
                    <MapPin className="h-5 w-5 text-gray-400" />
                    <div>
                      <p className="font-medium">Ph√≤ng ƒê√†o t·∫°o</p>
                      <p className="text-sm text-gray-600">T·∫ßng 3, T√≤a nh√† A</p>
                    </div>
                  </div>
                  <Button className="w-full">
                    ƒêƒÉng k√Ω t∆∞ v·∫•n
                  </Button>
                </CardContent>
              </Card>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
}