import { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';
import { Badge } from './ui/badge';
import { Button } from './ui/button';
import { 
  Palette, 
  Code, 
  Settings, 
  Zap, 
  Shield, 
  Cloud,
  Check,
  ArrowRight,
  Download,
  Star,
  Users,
  Globe
} from 'lucide-react';

export function WhiteLabelPage() {
  const features = [
    {
      icon: Palette,
      title: 'T√πy ch·ªânh Giao di·ªán',
      description: 'Thay ƒë·ªïi m√†u s·∫Øc, logo, v√† thi·∫øt k·∫ø theo th∆∞∆°ng hi·ªáu c·ªßa b·∫°n'
    },
    {
      icon: Code,
      title: 'API T√≠ch h·ª£p',
      description: 'D·ªÖ d√†ng t√≠ch h·ª£p v·ªõi h·ªá th·ªëng hi·ªán c√≥ th√¥ng qua RESTful API'
    },
    {
      icon: Settings,
      title: 'C·∫•u h√¨nh Linh ho·∫°t',
      description: 'C√†i ƒë·∫∑t c√°c ch·ª©c nƒÉng theo nhu c·∫ßu c·ª• th·ªÉ c·ªßa t·ª´ng kh√°ch h√†ng'
    },
    {
      icon: Zap,
      title: 'Hi·ªáu su·∫•t Cao',
      description: 'T·ªëi ∆∞u h√≥a t·ªëc ƒë·ªô v√† hi·ªáu su·∫•t cho tr·∫£i nghi·ªám ng∆∞·ªùi d√πng t·ªët nh·∫•t'
    },
    {
      icon: Shield,
      title: 'B·∫£o m·∫≠t N√¢ng cao',
      description: '√Åp d·ª•ng c√°c ti√™u chu·∫©n b·∫£o m·∫≠t qu·ªëc t·∫ø, m√£ h√≥a d·ªØ li·ªáu end-to-end'
    },
    {
      icon: Cloud,
      title: 'Tri·ªÉn khai ƒê√°m m√¢y',
      description: 'H·ªó tr·ª£ tri·ªÉn khai tr√™n AWS, Azure, Google Cloud v√† on-premise'
    }
  ];

  const plans = [
    {
      name: 'C∆° b·∫£n',
      price: '2.000.000',
      period: '/th√°ng',
      description: 'Ph√π h·ª£p cho doanh nghi·ªáp nh·ªè v√† v·ª´a',
      features: [
        'T√πy ch·ªânh giao di·ªán c∆° b·∫£n',
        'H·ªó tr·ª£ t·ªëi ƒëa 1.000 ng∆∞·ªùi d√πng',
        'API c∆° b·∫£n',
        'H·ªó tr·ª£ email',
        'Backup h√†ng tu·∫ßn'
      ],
      popular: false
    },
    {
      name: 'Chuy√™n nghi·ªáp',
      price: '5.000.000',
      period: '/th√°ng',
      description: 'D√†nh cho doanh nghi·ªáp l·ªõn',
      features: [
        'T√πy ch·ªânh giao di·ªán n√¢ng cao',
        'Kh√¥ng gi·ªõi h·∫°n ng∆∞·ªùi d√πng',
        'API ƒë·∫ßy ƒë·ªß',
        'H·ªó tr·ª£ 24/7',
        'Backup h√†ng ng√†y',
        'SSO integration',
        'Custom domain',
        'Analytics n√¢ng cao'
      ],
      popular: true
    },
    {
      name: 'Doanh nghi·ªáp',
      price: 'Li√™n h·ªá',
      period: '',
      description: 'Gi·∫£i ph√°p t√πy ch·ªânh ho√†n to√†n',
      features: [
        'T√πy ch·ªânh kh√¥ng gi·ªõi h·∫°n',
        'Dedicated server',
        'API custom',
        'Dedicated support team',
        'Backup real-time',
        'White-label ho√†n to√†n',
        'On-premise deployment',
        'SLA 99.9%'
      ],
      popular: false
    }
  ];

  const useCases = [
    {
      title: 'H·ªá th·ªëng Qu·∫£n l√Ω H·ªçc t·∫≠p (LMS)',
      description: 'T·∫°o n·ªÅn t·∫£ng e-learning v·ªõi th∆∞∆°ng hi·ªáu ri√™ng cho c√°c tr∆∞·ªùng h·ªçc v√† trung t√¢m ƒë√†o t·∫°o',
      icon: Users,
      examples: ['Coursera for Business', 'Corporate Training Platform', 'University Portal']
    },
    {
      title: 'N·ªÅn t·∫£ng Th∆∞∆°ng m·∫°i ƒêi·ªán t·ª≠',
      description: 'X√¢y d·ª±ng website b√°n h√†ng online v·ªõi ƒë·∫ßy ƒë·ªß t√≠nh nƒÉng qu·∫£n l√Ω v√† thanh to√°n',
      icon: Globe,
      examples: ['Multi-vendor Marketplace', 'B2B Trading Platform', 'Retail Chain Management']
    },
    {
      title: 'H·ªá th·ªëng Qu·∫£n l√Ω Doanh nghi·ªáp',
      description: 'Gi·∫£i ph√°p ERP t√≠ch h·ª£p qu·∫£n l√Ω nh√¢n s·ª±, t√†i ch√≠nh v√† v·∫≠n h√†nh',
      icon: Settings,
      examples: ['HR Management System', 'Financial Management', 'Supply Chain Management']
    }
  ];

  return (
    <div className="min-h-screen bg-white">
      {/* Hero Section */}
      <section className="bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 text-white py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center">
            <Badge className="mb-4 bg-white text-purple-900 hover:bg-gray-100">
              üöÄ White Label Solution
            </Badge>
            <h1 className="text-4xl md:text-6xl font-bold mb-6">
              Gi·∫£i ph√°p White Label
              <span className="block text-purple-300">Chuy√™n nghi·ªáp</span>
            </h1>
            <p className="text-xl md:text-2xl mb-8 max-w-4xl mx-auto">
              T·∫°o ra s·∫£n ph·∫©m c√¥ng ngh·ªá v·ªõi th∆∞∆°ng hi·ªáu ri√™ng c·ªßa b·∫°n. 
              T·ª´ thi·∫øt k·∫ø ƒë·∫øn tri·ªÉn khai, ch√∫ng t√¥i cung c·∫•p gi·∫£i ph√°p ho√†n ch·ªânh.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" className="bg-white text-purple-900 hover:bg-gray-100">
                B·∫Øt ƒë·∫ßu ngay
                <ArrowRight className="ml-2 h-4 w-4" />
              </Button>
              <Button size="lg" variant="outline" className="border-white text-white hover:bg-white hover:text-purple-900">
                Xem Demo
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              T√≠nh nƒÉng v∆∞·ª£t tr·ªôi
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              C√°c t√≠nh nƒÉng ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ ƒë√°p ·ª©ng m·ªçi nhu c·∫ßu v·ªÅ white label solution
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {features.map((feature, index) => {
              const Icon = feature.icon;
              return (
                <Card key={index} className="hover:shadow-lg transition-all duration-300 border-0 shadow-md">
                  <CardHeader>
                    <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-4">
                      <Icon className="h-6 w-6 text-purple-600" />
                    </div>
                    <CardTitle>{feature.title}</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="text-gray-600">{feature.description}</p>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        </div>
      </section>

      {/* Use Cases Section */}
      <section className="py-20 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              ·ª®ng d·ª•ng th·ª±c t·∫ø
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              C√°c lƒ©nh v·ª±c c√≥ th·ªÉ √°p d·ª•ng gi·∫£i ph√°p White Label c·ªßa ch√∫ng t√¥i
            </p>
          </div>

          <div className="grid lg:grid-cols-3 gap-8">
            {useCases.map((useCase, index) => {
              const Icon = useCase.icon;
              return (
                <Card key={index} className="hover:shadow-xl transition-all duration-300">
                  <CardHeader>
                    <div className="w-16 h-16 bg-blue-100 rounded-xl flex items-center justify-center mb-4">
                      <Icon className="h-8 w-8 text-blue-600" />
                    </div>
                    <CardTitle className="text-xl">{useCase.title}</CardTitle>
                    <CardDescription className="text-base">{useCase.description}</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-2">
                      <p className="font-medium text-gray-900 mb-3">V√≠ d·ª• ·ª©ng d·ª•ng:</p>
                      {useCase.examples.map((example, i) => (
                        <div key={i} className="flex items-center space-x-2">
                          <Check className="h-4 w-4 text-green-500" />
                          <span className="text-sm text-gray-600">{example}</span>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        </div>
      </section>

      {/* Pricing Section */}
      <section className="py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              B·∫£ng gi√° d·ªãch v·ª•
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Ch·ªçn g√≥i d·ªãch v·ª• ph√π h·ª£p v·ªõi quy m√¥ v√† ng√¢n s√°ch c·ªßa doanh nghi·ªáp
            </p>
          </div>

          <div className="grid lg:grid-cols-3 gap-8">
            {plans.map((plan, index) => (
              <Card key={index} className={`relative hover:shadow-xl transition-all duration-300 ${plan.popular ? 'border-purple-500 border-2' : ''}`}>
                {plan.popular && (
                  <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                    <Badge className="bg-purple-500 text-white px-4 py-1">
                      <Star className="w-4 h-4 mr-1" />
                      Ph·ªï bi·∫øn nh·∫•t
                    </Badge>
                    
                  </div>
                )}
                <CardHeader className="text-center">
                  <CardTitle className="text-2xl">{plan.name}</CardTitle>
                  <div className="mt-4">
                    <span className="text-4xl font-bold text-gray-900">{plan.price}</span>
                    <span className="text-gray-600">{plan.period}</span>
                  </div>
                  <CardDescription className="mt-2">{plan.description}</CardDescription>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-3 mb-8">
                    {plan.features.map((feature, i) => (
                      <li key={i} className="flex items-center space-x-3">
                        <Check className="h-5 w-5 text-green-500" />
                        <span className="text-gray-700">{feature}</span>
                      </li>
                    ))}
                  </ul>
                  <Button 
                    className={`w-full ${plan.popular ? 'bg-purple-600 hover:bg-purple-700' : ''}`}
                    variant={plan.popular ? 'default' : 'outline'}
                  >
                    {plan.price === 'Li√™n h·ªá' ? 'Li√™n h·ªá t∆∞ v·∫•n' : 'Ch·ªçn g√≥i n√†y'}
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-r from-purple-600 to-blue-600 text-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-3xl md:text-4xl font-bold mb-4">
            S·∫µn s√†ng b·∫Øt ƒë·∫ßu d·ª± √°n c·ªßa b·∫°n?
          </h2>
          <p className="text-xl mb-8 max-w-3xl mx-auto">
            Li√™n h·ªá v·ªõi ƒë·ªôi ng≈© chuy√™n gia c·ªßa ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n gi·∫£i ph√°p ph√π h·ª£p nh·∫•t
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button size="lg" className="bg-white text-purple-600 hover:bg-gray-100">
              Li√™n h·ªá ngay
              <ArrowRight className="ml-2 h-4 w-4" />
            </Button>
            <Button size="lg" variant="outline" className="border-white text-white hover:bg-white hover:text-purple-600">
              <Download className="mr-2 h-4 w-4" />
              T·∫£i brochure
            </Button>
          </div>
        </div>
      </section>
    </div>
  );
}